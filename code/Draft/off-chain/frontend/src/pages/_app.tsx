import '@/styles/globals.css';
import {
  Address,
  Blockfrost,
  Lucid,
  MintingPolicy,
  PolicyId,
  ScriptHash,
  SpendingValidator,
  TxHash,
  UTxO,
  Unit,
} from 'lucid-cardano';
import type { AppProps } from 'next/app';
import { Dispatch, SetStateAction, createContext, useEffect, useState } from 'react';

const collateralScript: SpendingValidator = {
  type: 'PlutusV2',
  script:
    '59098059097d01000032323232332232323232323232323322323322323232323232232323223223232533532323232325335004153355001102313357389201216275726e656420737461626c65636f696e20616d6f756e74206d69736d6174636800022153355335323235002222222222222533533355301d12001321233001225335002210031001002502625335333573466e3c0380040c80c44d40a00045409c010840c840c0d40188880094008408c4cd5ce24924636f6c6c61746572616c206f776e65722773207369676e6174757265206d697373696e670002215335500110231335738921216275726e656420737461626c65636f696e20616d6f756e74206d69736d617463680002210221333573466e1ccdc0a40006a0084440026464646464600200a640026aa0544466a0029000111a80111299a999ab9a3371e0040120580562600e0022600c006640026aa0524466a0029000111a80111299a999ab9a3371e00400e05605420022600c006640026e61240104555344500035005222003355001222222222222008022021135001220023333573466e1cd55cea80224000466442466002006004646464646464646464646464646666ae68cdc39aab9d500c480008cccccccccccc88888888888848cccccccccccc00403403002c02802402001c01801401000c008cd4070074d5d0a80619a80e00e9aba1500b33501c01e35742a014666aa040eb9407cd5d0a804999aa8103ae501f35742a01066a0380526ae85401cccd540800a9d69aba150063232323333573466e1cd55cea801240004664424660020060046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40d1d69aba150023035357426ae8940088c98c80e4cd5ce01d01c81b89aab9e5001137540026ae854008c8c8c8cccd5cd19b8735573aa004900011991091980080180119a81a3ad35742a004606a6ae84d5d1280111931901c99ab9c03a039037135573ca00226ea8004d5d09aba2500223263203533573806c06a06626aae7940044dd50009aba1500533501c75c6ae854010ccd540800988004d5d0a801999aa8103ae200135742a00460506ae84d5d1280111931901899ab9c03203102f135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d55cf280089baa00135742a00860306ae84d5d1280211931901199ab9c0240230213333573466e1d40152002212200223333573466e1d4019200021220012326320233357380480460420406666ae68cdc39aab9d5008480008ccc88848ccc00401000c008dd71aba15008375c6ae85401cdd69aba135744a00e464c6404266ae7008808407c40804c98c8080cd5ce24810350543500020135573ca00226ea80044d55ce9baa001135744a00226aae7940044dd5000990009aa80c1108911299a80089a80191000910999a802910011802001199aa9803890008028020008919118011bac001320013550182233335573e0024a014466a01260086ae84008c00cd5d100100c119191999ab9a3370e6aae7540092000233221233001003002300e35742a004600a6ae84d5d1280111931900c19ab9c019018016135573ca00226ea80048c8c8c8c8cccd5cd19b8735573aa00890001199991110919998008028020018011919191999ab9a3370e6aae7540092000233221233001003002301735742a00466a01e02c6ae84d5d1280111931900e99ab9c01e01d01b135573ca00226ea8004d5d0a802199aa8043ae500735742a0066464646666ae68cdc3a800a4008464244460040086ae84d55cf280191999ab9a3370ea0049001119091118008021bae357426aae7940108cccd5cd19b875003480008488800c8c98c807ccd5ce01000f80e80e00d89aab9d5001137540026ae854008cd402dd71aba135744a004464c6403266ae7006806405c4d5d1280089aba25001135573ca00226ea80044cd54005d73ad112232230023756002640026aa02a44646666aae7c008940208cd401ccc8848cc00400c008c018d55cea80118029aab9e500230043574400602c26ae840044488008488488cc00401000c488c8c8cccd5cd19b875001480008d401cc014d5d09aab9e500323333573466e1d400920022500723263201433573802a02802402226aae7540044dd50008909118010018891000919191999ab9a3370ea002900311909111180200298039aba135573ca00646666ae68cdc3a8012400846424444600400a60126ae84d55cf280211999ab9a3370ea006900111909111180080298039aba135573ca00a46666ae68cdc3a8022400046424444600600a6eb8d5d09aab9e500623263201233573802602402001e01c01a26aae7540044dd5000919191999ab9a3370e6aae7540092000233221233001003002300535742a0046eb4d5d09aba2500223263200e33573801e01c01826aae7940044dd50009191999ab9a3370e6aae75400520002375c6ae84d55cf280111931900619ab9c00d00c00a13754002464646464646666ae68cdc3a800a401842444444400646666ae68cdc3a8012401442444444400846666ae68cdc3a801a40104664424444444660020120106eb8d5d0a8029bad357426ae8940148cccd5cd19b875004480188cc8848888888cc008024020dd71aba15007375c6ae84d5d1280391999ab9a3370ea00a900211991091111111980300480418061aba15009375c6ae84d5d1280491999ab9a3370ea00c900111909111111180380418069aba135573ca01646666ae68cdc3a803a400046424444444600a010601c6ae84d55cf280611931900a99ab9c01601501301201101000f00e00d135573aa00826aae79400c4d55cf280109aab9e5001137540024646464646666ae68cdc3a800a4004466644424466600200a0080066eb4d5d0a8021bad35742a0066eb4d5d09aba2500323333573466e1d4009200023212230020033008357426aae7940188c98c8038cd5ce00780700600589aab9d5003135744a00226aae7940044dd5000919191999ab9a3370ea002900111909118008019bae357426aae79400c8cccd5cd19b875002480008c8488c00800cdd71aba135573ca008464c6401666ae7003002c0240204d55cea80089baa00112232323333573466e1d400520042122200123333573466e1d40092002232122230030043006357426aae7940108cccd5cd19b87500348000848880088c98c8030cd5ce00680600500480409aab9d5001137540024646666ae68cdc3a800a4004400a46666ae68cdc3a80124000400a464c6401066ae700240200180144d55ce9baa0011220021220014984800524010350543100112323001001223300330020020011',
};

const dataListingScript: SpendingValidator = {
  type: 'PlutusV2',
  script:
    '590aa6590aa30100003232323233223322323232323232323232323232323232323232323232323322323223232232232325335323232533500215335333573466e20c8c094004ccd54c0344800488cd54c048480048d400488cd540bc008cd54c054480048d400488cd540c8008ccd40048cc0d52000001223303600200123303500148000004cd54c048480048d400488cd540bc008ccd40048cd54c058480048d400488cd540cc008d5406000400488ccd55404c0640080048cd54c058480048d400488cd540cc008d5405c004004ccd55403805000800540a4c8c8d4004888888888888ccd54c06c4800488d40088888d401088cd400894cd4ccd5cd19b8f01700103e03d133503f00600810082008503700a35002220023500322002350032200102602710271335738920121616d6f756e74207265717569726564206e6f74207061696420746f206f776e65720002613263202233573892011652656465656d206e6f7420696d706c656d656e746564000223333573466e1cd55cea80224000466442466002006004646464646464646464646464646666ae68cdc39aab9d500c480008cccccccccccc88888888888848cccccccccccc00403403002c02802402001c01801401000c008cd4084088d5d0a80619a8108111aba1500b33502102335742a014666aa04aeb94090d5d0a804999aa812bae502435742a01066a0420546ae85401cccd540940add69aba150063232323333573466e1cd55cea801240004664424660020060046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40d5d69aba150023036357426ae8940088c98c80e0cd5ce01c81c01b09aab9e5001137540026ae854008c8c8c8cccd5cd19b8735573aa004900011991091980080180119a81abad35742a004606c6ae84d5d1280111931901c19ab9c039038036135573ca00226ea8004d5d09aba2500223263203433573806a06806426aae7940044dd50009aba1500533502175c6ae854010ccd5409409c8004d5d0a801999aa812bae200135742a00460526ae84d5d1280111931901819ab9c03103002e135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d55cf280089baa00135742a00860326ae84d5d1280211931901119ab9c0230220203333573466e1d40152002212200223333573466e1d40192000212200123263202233573804604404003e6666ae68cdc39aab9d5007480008cc8848cc00400c008dd71aba15007375a6ae84d5d1280391931901019ab9c02102001e101f13263201f3357389201035054350001f135573ca00226ea80044d55ce9baa001135573ca00226ea8004444888ccd54c01048005407ccd54c01c480048d400488cd54090008d54024004ccd54c0104800488d4008894cd4ccd54c03048004c8c848cc00488ccd401488008008004008d40048800448cc004894cd4008409440040888d400488cc028008014018400c4cd408c01000d4080004cd54c01c480048d400488c8cd5409400cc004014c8004d5409c894cd40044d5402800c884d4008894cd4cc03000802044888cc0080280104c01800c008c8004d5408088448894cd40044008884cc014008ccd54c01c480040140100044484888c00c0104484888c004010c8004d540748844894cd400454074884cd4078c010008cd54c01848004010004c8004d5407088448894cd40044d400c88004884ccd401488008c010008ccd54c01c4800401401000488ccd5cd19b8f0020010170161232230023758002640026aa036446666aae7c004940688cd4064c010d5d080118019aba2002012232323333573466e1cd55cea8012400046644246600200600460146ae854008c014d5d09aba2500223263201233573802602402026aae7940044dd50009191919191999ab9a3370e6aae75401120002333322221233330010050040030023232323333573466e1cd55cea8012400046644246600200600460266ae854008cd4034048d5d09aba2500223263201733573803002e02a26aae7940044dd50009aba150043335500875ca00e6ae85400cc8c8c8cccd5cd19b875001480108c84888c008010d5d09aab9e500323333573466e1d4009200223212223001004375c6ae84d55cf280211999ab9a3370ea00690001091100191931900c99ab9c01a019017016015135573aa00226ea8004d5d0a80119a804bae357426ae8940088c98c804ccd5ce00a00980889aba25001135744a00226aae7940044dd5000899aa800bae75a224464460046eac004c8004d5406088c8cccd55cf8011280c119a80b99aa80c98031aab9d5002300535573ca00460086ae8800c0404d5d080089119191999ab9a3370ea0029000119091180100198029aba135573ca00646666ae68cdc3a801240044244002464c6402066ae700440400380344d55cea80089baa001232323333573466e1d400520062321222230040053007357426aae79400c8cccd5cd19b875002480108c848888c008014c024d5d09aab9e500423333573466e1d400d20022321222230010053007357426aae7940148cccd5cd19b875004480008c848888c00c014dd71aba135573ca00c464c6402066ae7004404003803403002c4d55cea80089baa001232323333573466e1cd55cea80124000466442466002006004600a6ae854008dd69aba135744a004464c6401866ae700340300284d55cf280089baa0012323333573466e1cd55cea800a400046eb8d5d09aab9e500223263200a33573801601401026ea80048c8c8c8c8c8cccd5cd19b8750014803084888888800c8cccd5cd19b875002480288488888880108cccd5cd19b875003480208cc8848888888cc004024020dd71aba15005375a6ae84d5d1280291999ab9a3370ea00890031199109111111198010048041bae35742a00e6eb8d5d09aba2500723333573466e1d40152004233221222222233006009008300c35742a0126eb8d5d09aba2500923333573466e1d40192002232122222223007008300d357426aae79402c8cccd5cd19b875007480008c848888888c014020c038d5d09aab9e500c23263201333573802802602202001e01c01a01801626aae7540104d55cf280189aab9e5002135573ca00226ea80048c8c8c8c8cccd5cd19b875001480088ccc888488ccc00401401000cdd69aba15004375a6ae85400cdd69aba135744a00646666ae68cdc3a80124000464244600400660106ae84d55cf280311931900619ab9c00d00c00a009135573aa00626ae8940044d55cf280089baa001232323333573466e1d400520022321223001003375c6ae84d55cf280191999ab9a3370ea004900011909118010019bae357426aae7940108c98c8024cd5ce00500480380309aab9d50011375400224464646666ae68cdc3a800a40084244400246666ae68cdc3a8012400446424446006008600c6ae84d55cf280211999ab9a3370ea00690001091100111931900519ab9c00b00a008007006135573aa00226ea80048c8cccd5cd19b8750014800880288cccd5cd19b8750024800080288c98c8018cd5ce00380300200189aab9d37540029309000a481035054310032001355009223350014800088d4008894cd4ccd5cd19b8f00200d009008130070011300600332001355008223350014800088d4008894cd4ccd5cd19b8f00200c0080071001130060031220021220011122002122122330010040031122123300100300248900223370000400222464600200244660066004004003',
};

export type AppState = {
  // Global
  lucid?: Lucid;
  wAddr?: Address;
  // NFT Policy
  nftPolicyIdHex?: PolicyId;
  nftTokenNameHex?: string;
  nftAssetClassHex?: Unit;
  nftPolicy?: MintingPolicy;
  // Stablecoin Policy
  scPolicyIdHex?: PolicyId;
  scTokenNameHex?: string;
  scAssetClassHex?: Unit;
  scPolicy?: MintingPolicy;
  minPercent?: number;
  mintingPolRefScrUTxO?: UTxO;
  mintingPolRefScrUTxORef?: string;
  // Oracle
  oracleScript?: SpendingValidator;
  oracleScriptHash?: ScriptHash;
  oracleAddress?: Address;
  oracleWithNftUTxO?: UTxO;
  oracleUtxoWithNFTRef?: string;
  // Collateral
  collateralScript: SpendingValidator;
  collateralScriptHash?: ScriptHash;
  collatealAddr?: Address;
  collateralRefScrUTxO?: UTxO;
  collateralRefScrUTxORef?: string;
  collateralToUnlockUTxO?: UTxO;
  collateralToUnlockUTxORef?: string;
  // Reference Scripts
  txScriptsDeployment?: TxHash;

  // Added by ME
  dataTokenPolicyIdHex?: PolicyId;
  dataTokenNameHex?: string;
  dataTokenAssetClassHex?: Unit;
  dataTokenPolicy?: MintingPolicy;
  dataListingScript: SpendingValidator;
};

const initialAppState: AppState = {
  collateralScript: collateralScript,
  dataListingScript: dataListingScript,
};

export const AppStateContext = createContext<{
  appState: AppState;
  setAppState: Dispatch<SetStateAction<AppState>>;
}>({ appState: initialAppState, setAppState: () => {} });

export default function App({ Component, pageProps }: AppProps) {
  const [appState, setAppState] = useState<AppState>(initialAppState);

  const connectLucidAndNami = async () => {
    // const projectId = 'previewsKVSTHsY3c2sWpsRpJRjs9KiOLaSRmht'
    const blackFrostKey = process.env.NEXT_PUBLIC_BLACKFROST_KEY;
    console.log({ blackFrostKey });
    const lucid = await Lucid.new(
      new Blockfrost('https://cardano-preview.blockfrost.io/api/v0', blackFrostKey),
      'Preview'
    );
    if (!window.cardano.nami) {
      window.alert('Please install Nami Wallet');
      return;
    }
    const nami = await window.cardano.nami.enable();
    lucid.selectWallet(nami);
    setAppState({
      ...initialAppState,
      lucid: lucid,
      wAddr: await lucid.wallet.address(),
    });
  };

  useEffect(() => {
    if (appState.lucid) return;
    connectLucidAndNami();
  }, [appState]);
  return (
    <AppStateContext.Provider value={{ appState, setAppState }}>
      <Component {...pageProps} />
    </AppStateContext.Provider>
  );
}
